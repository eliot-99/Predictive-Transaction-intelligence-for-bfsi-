services:
  # FastAPI Fraud Detection Service
  - type: web
    name: fraudguard-api
    env: python
    region: oregon
    plan: free
    runtime: python-3.11
    buildCommand: pip install -r api/requirements.txt
    startCommand: gunicorn -w 4 -b 0.0.0.0:$PORT api.main:app
    envVars:
      - key: PORT
        value: 8000
      - key: PYTHONUNBUFFERED
        value: true
      - key: MODEL_PATH
        value: api/fraud_model.onnx
      - key: PREPROC_PATH
        value: api/preprocessor.pkl
    routes:
      - path: /
        service: fraudguard-api
      - path: /detect
        service: fraudguard-api
      - path: /health
        service: fraudguard-api
      - path: /docs
        service: fraudguard-api

  # Flask Web Application
  - type: web
    name: fraudguard-webapp
    env: python
    region: oregon
    plan: free
    runtime: python-3.11
    buildCommand: pip install -r WebApp/requirements.txt
    startCommand: cd WebApp && gunicorn -w 4 -b 0.0.0.0:$PORT app:app
    envVars:
      - key: PORT
        value: 5000
      - key: PYTHONUNBUFFERED
        value: true
      - key: SECRET_KEY
        value: your-secret-key-change-this-in-production
      - key: FRAUD_API_URL
        value: https://fraudguard-api.onrender.com/detect
      - key: FLASK_ENV
        value: production
    routes:
      - path: /
        service: fraudguard-webapp
      - path: /login
        service: fraudguard-webapp
      - path: /signup
        service: fraudguard-webapp
      - path: /dashboard
        service: fraudguard-webapp
      - path: /predict
        service: fraudguard-webapp
      - path: /history
        service: fraudguard-webapp
      - path: /chatbot
        service: fraudguard-webapp
      - path: /about
        service: fraudguard-webapp
      - path: /static
        service: fraudguard-webapp
      - path: /api
        service: fraudguard-webapp

# Scheduled jobs (optional)
jobs: []

# Database configuration (optional - can use SQLite or PostgreSQL)
databases: []

# Build configuration
build:
  packages:
    - gcc
    - g++
  prebuild: |
    echo "Setting up FraudGuard BFSI..."
    ls -la

# Deployment webhook (triggered on push)
webhook:
  autoDeployOnPush: true
  branch: main
